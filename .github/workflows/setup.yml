name: CI

on:
  push:
    branches: [ main ]

jobs:
  create_envs:
    runs-on: ubuntu-latest
    env:
      PG_HOST: ${{ secrets.HOST }}
      PG_PORT: ${{ secrets.PG_PORT }}
      PG_DBNAME: ${{ secrets.PG_DBNAME }}
      PG_USER: ${{ secrets.PG_USER }}
      PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
      PGADMIN_DEFAULT_EMAIL: ${{ secrets.PGADMIN_DEFAULT_EMAIL }}
      PGADMIN_DEFAULT_PASSWORD: ${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
    steps:
      - name: Run Checkout
        uses: actions/checkout@master

      - name: Create "pg.env" file
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: ./postre/pg.env.j2
          output_file: ./postre/pg.env

      - name: Create "gdal.env" file
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: ./osm2pgsql/gdal.env.j2
          output_file: ./osm2pgsql/gdal.env

      # Передаем файлы на сервер
      - name: Send file on server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATEKEY }}
          source: "./"
          target: "~/${{ github.event.repository.name }}"

  deploy:
    needs: [ create_envs ]
    runs-on: ubuntu-latest

    steps:
      - name: Run deploy
        uses: appleboy/ssh-action@master
        with:
          script: |
            cd ~/diplom-server-setup/scripts/ &&
            chmod +x setup.sh &&
            ./setup.sh &&
            cd ~/diplom-server-setup/postre &&
            docker-compose down &&
            docker-compose up -d &&
            docker-compose -f docker-compose.pgadmin.yml down &&
            docker-compose -f docker-compose.pgadmin.yml up -d
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATEKEY }}
